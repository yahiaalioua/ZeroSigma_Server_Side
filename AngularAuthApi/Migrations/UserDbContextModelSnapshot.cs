// <auto-generated />
using System;
using AngularAuthApi.Data_Access;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AngularAuthApi.Migrations
{
    [DbContext(typeof(UserDbContext))]
    partial class UserDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AngularAuthApi.Entities.Auth", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiredDate")
                        .HasMaxLength(50)
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasMaxLength(10)
                        .HasColumnType("tinyint(10)");

                    b.Property<bool>("IsExpired")
                        .HasMaxLength(10)
                        .HasColumnType("tinyint(10)");

                    b.Property<DateTime?>("IssuedDate")
                        .HasMaxLength(50)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Auth");
                });

            modelBuilder.Entity("AngularAuthApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<byte[]>("Salt")
                        .HasMaxLength(128)
                        .HasColumnType("varbinary(128)");

                    b.Property<string>("Token")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AngularAuthApi.Entities.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AboutMe")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Linkedin")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Website")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("YouTube")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("AngularAuthApi.Entities.Auth", b =>
                {
                    b.HasOne("AngularAuthApi.Entities.User", "User")
                        .WithOne("Auth")
                        .HasForeignKey("AngularAuthApi.Entities.Auth", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AngularAuthApi.Entities.UserInfo", b =>
                {
                    b.HasOne("AngularAuthApi.Entities.User", "User")
                        .WithOne("UserInfo")
                        .HasForeignKey("AngularAuthApi.Entities.UserInfo", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AngularAuthApi.Entities.User", b =>
                {
                    b.Navigation("Auth")
                        .IsRequired();

                    b.Navigation("UserInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
